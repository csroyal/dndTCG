html, body {
    overflow: hidden;
    height: 100%;
    width: 100%;
    color: white;
}

#backToMain {
    color: white;
    position: absolute;
    top: 35px;
    left: 35px;
}

#deckSelectModalContainer, #discardPileModalContainer, #deckModalContainer, #handViewModalContainer, #choiceModalContainer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0,0,0,0.5);
}

#discardPileModalContainer, #deckModalContainer, #handViewModalContainer, #choiceModalContainer {
    display: none;
}

#deckSelectModal, #discardPileModal, #deckModal, #handViewModal, #choiceModal {
    width: 50%;
    height: 75%;
    background-color: rgb(50,50,50);
    border: 1px solid black;
    border-radius: 8px;
    color: white;
    display: flex;
    align-items: center;
    flex-direction: column;
}

#choiceModal {
    height: 56%;
}

#deckSelectModal h2, #discardPileModal h2, #deckModal h2, #handViewTitle, #choiceModal h2 {
    text-align: center;
}

#deckSelect, #discardPileView, #deckView, #handView, #choices {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 90%;
    height: 80%;
    overflow-x: hidden;
    overflow-y: auto;
}

#discardPileView, #deckView, #handView {
    flex-direction: row;
    flex-wrap: wrap;
}

#discardPileView .card, #deckView .card, #handView .card {
    width: 181px;
    margin: 8px;
}

#deckView .card, #handView .card {
    cursor: pointer;
}

.user-deck {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: rgb(100,100,100);
    border: 2px solid black;
    color: white;
    padding: 24px 36px;
    font-size: 24px;
    cursor: pointer;
    transition: all 0.25s;
    width: 90%;
    margin: 12px 0px;
    box-sizing: border-box;
}

.user-deck.selected {
    border: 2px solid lime;
}

#deckSelectConfirmBtn, #handViewConfirmBtn, #deckViewConfirmBtn, .choice {
    border: 2px solid black;
    background-color: rgb(100,100,100);
    padding: 12px 24px;
    color: white;
    font-size: 24px;
    cursor: pointer;
    transition: all 0.25s;
    margin: 16px 0px;
    user-select: none;
}

#deckSelectConfirmBtn:hover, #handViewConfirmBtn:hover, #deckViewConfirmBtn:hover, .choice:hover {
    background-color: rgb(125,125,125);
}

#goToDeckBuilderBtn {
    display: none;
}

#battleSim {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

#topRow, #bottomRow, #hand, #monsterZoneContainer, #reactionZoneContainer {
    display: flex;
}

#topRow, #bottomRow {
    width: 100%;
    justify-content: space-around;
    margin: 8px 0px;
}

#hand {
    position: absolute;
    bottom: -35px;
    width: 90%;
    margin: auto;
    display: flex;
    justify-content: center;
    overflow: visible;
    transition: all 0.5s;
}

#hand.shuffling {
    transform: translateY(500px);
}

#monsterZoneContainer, #reactionZoneContainer {
    width: 50%;
    justify-content: space-around;
}

.spacer, .monster-zone, .reaction-zone, #discardPile, #deckPile, .card {
    width: 217px;
    aspect-ratio: 362 / 508;
    border: 2px solid black;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
}

#discardPile {
    cursor: pointer;
    transition: all 0.5s;
}

.bottom-spacer {
    height: 278px;
    width: 50px;
}

#hand .card {
    transition: all 0.2s;
    margin: 0px 4px;
}

#hand .card:hover {
    transform: translateY(-35px) scale(1.05);
    cursor: pointer;
}

.spacer {
    border: none;
}

#deckPile, #discardPile, .monster-zone, .reaction-zone {
    position: relative;
    perspective: 1500px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.deck-card {
    position: absolute;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    background-image: url(../assets/cards/back.png);
    opacity: 1;
    transform-origin: center;
    will-change: transform,;
    /* animation: shuffle 1.4s; */
}

#actionTracker {
    position: absolute;
    left: 0;
    top: 25%;
    display: flex;
    flex-direction: column;
    background-color: rgb(75,75,75);
    border: 2px solid rgb(50,50,50);
    border-radius: 0px 8px 8px 0px;
    padding: 24px;
}

#turnTracker {
    text-align: center;
    font-size: 20px;
    margin-bottom: 8px;
}

#action, #bonusAction, #reaction {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 8px 0px;
}

.light {
    border-radius: 50%;
    width: 25px;
    height: 25px;
    background-color: lime;
    margin-left: 18px;
}

#endTurnBtn {
    border: 2px solid black;
    background-color: rgb(100,100,100);
    padding: 6px 12px;
    color: white;
    font-size: 18px;
    cursor: pointer;
    transition: all 0.25s;
    margin-top: 8px;
}

#endTurnBtn:hover {
    background-color: rgb(125,125,125);
}

#cardPopupModal {
    display: none;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.75);
    z-index: 5;
}

#cardPopupImage {
    width: 362px;
    height: 508px;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: 2px solid black;
    border-radius: 4px;
    transition: all 0.25s;
}

#cardPopupImage:hover {
    transform: scale(1.1);
    cursor: pointer;
}

#cardPopupDescription {
    max-width: 750px;
    max-height: 200px;
    background: white;
    color: black;
    border: 2px solid black;
    padding: 16px;
    overflow-y: auto;
    font-size: 24px;
    margin-top: 32px;
}

.card.playing {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: playCardGlow 1.2s ease-in-out forwards; /* Card moves and glows */
    z-index: 100;
    width: 362px;
    height: 508px;
    pointer-events: none;
}

.occupied {
    cursor: pointer;
}

.zone-glow {
    animation: zoneGlow 0.5s ease-in-out forwards;
}

.dice-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: white;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    visibility: hidden; /* Hidden until triggered */
    z-index: 99;
}

.dice {
    color: black;
    font-size: 3rem;
    text-align: center;
    z-index: 99;
}

.coin {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80px;
    height: 80px;
    line-height: 80px;
    text-align: center;
    font-size: 20px;
    font-weight: bold;
    color: white;
    background: linear-gradient(180deg, #bbb 0%, #888 100%);
    border-radius: 50%;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    transform: translate(-50%, -50%);
    animation: coinFlip 1.5s ease-out forwards;
    backface-visibility: hidden;
}

#discardPile.shuffle {
    transform: translateY(324px);
}

.card.unselectable {
    pointer-events: none;
    filter: grayscale(80%) brightness(50%);
}

.card.selected {
    border: 2px solid lime;
}

.monster-overlay, .reaction-overlay {
    position: relative;
    width: 100%;
    height: 100%;
}

.monster-overlay-health {
    position: absolute;
    top: 5px;
    left: 5px;
    color: lime;
    text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000;
    font-weight: bold;
    font-size: 24px;
    padding: 8px;
    cursor: pointer;
}

.monster-overlay-action {
    position: absolute;
    top: 45px;
    left: -1px;
    text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000;
    font-weight: bold;
    font-size: 22px;
    padding: 8px;
    cursor: pointer;
}

.monster-overlay-effects {
    position: absolute;
    top: 90px;
    left: -1px;
    text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000;
    font-weight: bold;
    font-size: 22px;
    padding: 8px;
    cursor: pointer;
}

.monster-overlay-action[data-used="false"] {
    left: 2px;
}

.defeated {
    animation: fadeToRed 3s ease-out forwards;
}

.reaction-used {
    animation: reactionPulse 1.5s ease-out forwards;
}

#beholderAnimation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

#beholderAnimation .card {
    width: 272px;
    aspect-ratio: 362 / 508;
    border: 2px solid black;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
}

/* #beholderTentacle {
    background-image: url(../assets/cards/tentacles-of-the-beholder.png);
    animation: beholderGlowMove 4s ease-in-out forwards;
}

#beholderEye {
    background-image: url(../assets/cards/eye-of-the-beholder.png);
    animation: beholderGlow 4s ease-in-out forwards;
}

#beholderMouth {
    background-image: url(../assets/cards/mouth-of-the-beholder.png);
    animation: beholderGlowMove 4s ease-in-out forwards;
}

#beholder {
    display: none;
} */

.beholder-card.fusion-glow {
    animation: beholderGlow 2s infinite alternate ease-in-out;
}

.beholder-card.fusion-move {
    animation: moveToCenter 3s ease-in-out forwards;
}

.full-beholder {
    position: absolute;
    top: 0%;
    left: 30%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    width: 40%;
    height: auto;
    animation: finalReveal 1.5s forwards;
}

.damage-number {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.5);
    font-size: 100px;
    font-weight: bold;
    color: lime;
    text-shadow: 0 0 10px yellow, 0 0 20px lime;
    opacity: 0;
    animation: laserDamage 1.5s ease-out forwards;
}

.buff-animation {
  animation: buffEffect 1s ease-out;
}

.debuff-animation {
  animation: debuffEffect 0.8s ease-in-out;
}

.heal-animation {
    animation: healEffect 1.5s ease-out;
}

.damage-animation {
    animation: damageEffect 0.7s ease-in-out;
}

@keyframes shuffle {
  0% {
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
  25% {
    transform: translate(50px, -50px) rotate(45deg) scale(1.1);
  }
  50% {
    transform: translate(-50px, 50px) rotate(-45deg) scale(0.9);
  }
  75% {
    transform: translate(100px, 0) rotate(90deg) scale(1.05);
  }
  100% {
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
}

@keyframes drawCard {
    0% {
      transform: translate(0, 0) rotate(0deg) scale(1);
    }
    100% {
      transform: translate(0, 1200px) rotate(0deg) scale(1); /* Moves downward and towards hand */
    }
}

@keyframes playCardGlow {
    0% {
      transform: translate(-50%, -50%) rotateY(300deg) scale(1);
      opacity: 1;
      box-shadow: 0 0 0px rgba(255, 255, 255, 0.6);
    }
    20% {
      transform: translate(-50%, -50%) rotateY(360deg) scale(1.1);
      opacity: 1;
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }
    70% {
      transform: translate(-50%, -50%) rotateY(360deg) scale(1.1);
      opacity: 1;
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }
    85% {
      transform: translate(-50%, -50%) rotateY(360deg) scale(1.1);
      opacity: 1;
      box-shadow: 0 0 65px rgba(255, 255, 255, 1); /* Glow intensifies */
    }
    100% {
      transform: translate(-50%, -50%) rotateY(360deg) scale(1);
      opacity: 0;
      box-shadow: 0 0 0px rgba(255, 255, 255, 0);
    }
  }

@keyframes zoneGlow {
    0% {
        box-shadow: 0 0 0px rgba(255, 255, 255, 0.6);
    }
    50% {
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }
    100% {
        box-shadow: 0 0 0px rgba(255, 255, 255, 0);
    }
}

@keyframes rollDice {
    0% { transform: rotateX(0deg) rotateY(0deg); }
    25% { transform: rotateX(180deg) rotateY(0deg); }
    50% { transform: rotateX(180deg) rotateY(180deg); }
    75% { transform: rotateX(0deg) rotateY(180deg); }
    100% { transform: rotateX(0deg) rotateY(0deg); }
}

@keyframes coinFlip {
    0% {
      transform: rotateY(0deg) translateY(0);
    }
    50% {
      transform: rotateY(720deg) translateY(-50px); /* Spins while moving up */
    }
    100% {
      transform: rotateY(1440deg) translateY(0); /* Lands after full spins */
    }
}

@keyframes fadeToRed {
    0% {
        filter: none;
    }
    100% {
        filter: brightness(40%) sepia(100%) hue-rotate(-50deg) saturate(500%);
    }
}

@keyframes reactionPulse {
  0% {
    box-shadow: 0 0 30px rgba(255, 0, 0, 0.5);
  }
  50% {
    box-shadow: 0 0 60px rgba(255, 0, 0, 0.8);
  }
  100% {
    box-shadow: 0 0 30px rgba(255, 0, 0, 0.5);
  }
}

@keyframes beholderGlow {
    0% { filter: brightness(100%); }
    50% { filter: brightness(200%) drop-shadow(0 0 10px cyan); }
    100% { filter: brightness(100%); }
}
  
@keyframes moveToCenter {
    0% { transform: translateY(0) scale(1); opacity: 1; }
    50% { transform: translateY(-50vh) scale(1.2); opacity: 1; }
    100% { transform: translateY(-50vh) scale(0); opacity: 0; }
}

@keyframes finalReveal {
    0% { opacity: 0; transform: scale(0.5); filter: brightness(300%) drop-shadow(0 0 50px cyan); }
    100% { opacity: 1; transform: scale(1); filter: brightness(100%); }
}

@keyframes laserDamage {
    0% { transform: scale(0.5); opacity: 0; filter: brightness(200%); }
    30% { transform: scale(1.2); opacity: 1; filter: brightness(300%) drop-shadow(0 0 20px lime); }
    70% { transform: scale(1); filter: brightness(500%) drop-shadow(0 0 40px yellow); }
    100% { transform: scale(1.5); opacity: 0; filter: brightness(100%); }
}

@keyframes buffEffect {
    0% { filter: drop-shadow(0 0 0px lime); transform: scale(1); opacity: 1; }
    50% { filter: drop-shadow(0 0 15px lime); transform: scale(1.05); }
    100% { filter: drop-shadow(0 0 0px lime); transform: scale(1); opacity: 1; }
}

@keyframes debuffEffect {
    0% { filter: brightness(100%) drop-shadow(0 0 0px red); transform: translateX(0); }
    30% { filter: brightness(150%) drop-shadow(0 0 20px red); transform: translateX(-3px); }
    60% { filter: brightness(150%) drop-shadow(0 0 20px red); transform: translateX(3px); }
    100% { filter: brightness(100%) drop-shadow(0 0 0px red); transform: translateX(0); }
}

@keyframes healEffect {
    0% { filter: brightness(100%) drop-shadow(0 0 0px lime); transform: scale(1); opacity: 1; }
    50% { filter: brightness(150%) drop-shadow(0 0 20px lime); transform: scale(1.05); }
    100% { filter: brightness(100%) drop-shadow(0 0 0px lime); transform: scale(1); opacity: 1; }
}

@keyframes damageEffect {
    0% { filter: brightness(100%) drop-shadow(0 0 0px red); transform: translateX(0); }
    20% { filter: brightness(200%) drop-shadow(0 0 15px red); transform: translateX(-5px); }
    40% { transform: translateX(5px); }
    60% { transform: translateX(-3px); }
    80% { transform: translateX(3px); }
    100% { filter: brightness(100%) drop-shadow(0 0 0px red); transform: translateX(0); }
}